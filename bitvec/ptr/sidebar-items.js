window.SIDEBAR_ITEMS = {"enum":[["BitPtrError","Errors produced by invalid bit-pointer components."],["BitSpanError","An error produced when creating `BitSpan` encoded references."]],"fn":[["bitslice_from_raw_parts","Bit-Slice Pointer Construction"],["bitslice_from_raw_parts_mut","Bit-Slice Pointer Construction"],["check_alignment","Ensures that an address is well-aligned to its referent type width."],["copy","Bit-wise `memcpy`"],["copy_nonoverlapping","Bit-wise `memcpy`"],["drop_in_place","Remote Destructor"],["eq","Bit-Pointer Equality"],["hash","Bit-Pointer Hashing"],["null","Bit-Pointer Sentinel Value"],["null_mut","Bit-Pointer Sentinel Value"],["read","Single-Bit Read"],["read_unaligned","Single-Bit Unaligned Read"],["read_volatile","Single-Bit Volatile Read"],["replace","Single-Bit Replacement"],["slice_from_raw_parts","Raw Bit-Slice Pointer Construction"],["slice_from_raw_parts_mut","Raw Bit-Slice Pointer Construction"],["swap","Bit Swap"],["swap_nonoverlapping","Many-Bit Swap"],["write","Single-Bit Write"],["write_bits","Bit-wise `memset`"],["write_bytes","Bit-wise `memset`"],["write_unaligned","Single-Bit Unaligned Write"],["write_volatile","Single-Bit Volatile Write"]],"struct":[["BitPtr","Single-Bit Pointer"],["BitPtrRange","Bit-Pointer Range"],["BitRef","Proxy Bit-Reference"],["Const","A basic `const` marker."],["MisalignError","The error produced when an address is insufficiently aligned to the width of its type."],["Mut","A basic `mut` marker."]],"trait":[["Mutability","Generalized mutability permissions."]]};